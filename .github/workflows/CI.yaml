name:  CI Process
run-name:  ${{ github.actor}} is learning Github Actions
on:  [push]
permissions:
  issues: write
  contents: write
  pull-requests: write
  statuses: write
jobs:
  behave-testing:
    #Setup of simple OS of choice. i.e. Linux
    #create VM with ubuntu OS
    runs-on:  ubuntu-latest

    steps:
      #Setup of envirionment for test
      - name:  checkout
        uses:  actions/checkout@v4.2.2
      - name:  List repo
        run:  |
            ls
            
      #install python
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version:  '3.9'

      #install behave
      - name:  Setup Behave
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            behave

      #run
      - name:  run behave test
        run:  |
          behave

      - name: create an issue
        if: failure()  # Only run this step if the job fails
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: |
            [${{ github.workflow }}] failed during [${{ github.event_name }}]
          body: |
            ## Failure Report:
            
            > [!IMPORTANT]
            > Details on failed run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
            - Author: @${{ github.triggering_actor }}
            - Branch: `${{ github.ref }}`
            - Commit: ${{ github.sha }}
            - Workflow Path: `${{ github.workflow_ref }}`
    
            - [ ] **Task**: Review failed run, fix the issue(s), and re-run until successful.
    
            > This issue was created automatically by GitHub, 
            > through `dacbd/create-issue-action@main` action
            > and KemingHe's contribution.
            > **DO NOT** close this issue until resolved.
 
      - name: upload test results
        if: always()
        uses: actions:/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
    


# Week13 - Step 6b: Send Telegram Message on failure 
      - name: Send Telegram Message on Test Failure(s)
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          COMMIT_AUTHOR: ${{ github.actor }}
        run: |
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="The run failed. The action was triggered by: ${COMMIT_AUTHOR}. Please review the failed run, fix the issue(s), and re-run until successful."
